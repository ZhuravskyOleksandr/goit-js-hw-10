{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport izitoast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.querySelector('.time-input');\nconst startBtn = document.querySelector('.start-btn');\nstartBtn.addEventListener('click', runTimer);\n\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\n\nconst calendar = flatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();   \n\n    if (userSelectedDate < Date.now()) {\n        izitoast.error({\n            title: 'Error',\n            message: 'Illegal operation',\n            position: 'topRight'\n        });\n    } else {\n        startBtn.disabled = false;\n      }\n  }, \n});\n\nfunction runTimer() {\n    const intervalID = setInterval(() => {\n        const timeDiff = userSelectedDate - Date.now();\n        \n        if (timeDiff > 0) {\n            const { days, hours, minutes, seconds } = convertMs(timeDiff);\n\n            daysSpan.textContent = addLeadingZero(days);\n            hoursSpan.textContent = addLeadingZero(hours);\n            minutesSpan.textContent = addLeadingZero(minutes);\n            secondsSpan.textContent = addLeadingZero(seconds);\n\n            startBtn.disabled = true;\n        } else {\n            clearInterval(intervalID);\n        }\n    }, 1000);\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n};"],"names":["input","startBtn","runTimer","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","flatpickr","selectedDates","izitoast","intervalID","timeDiff","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,cAAc,aAAa,EAC5CC,EAAW,SAAS,cAAc,YAAY,EACpDA,EAAS,iBAAiB,QAASC,CAAQ,EAE3C,MAAMC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAEaC,EAAUR,EAAO,CAChC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQS,EAAe,CACrBF,EAAmBE,EAAc,GAAG,QAAO,EAEvCF,EAAmB,KAAK,MACxBG,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oBACT,SAAU,UACtB,CAAS,EAEDT,EAAS,SAAW,EAEzB,CACH,CAAC,EAED,SAASC,GAAW,CAChB,MAAMS,EAAa,YAAY,IAAM,CACjC,MAAMC,EAAWL,EAAmB,KAAK,IAAG,EAE5C,GAAIK,EAAW,EAAG,CACd,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAE5DT,EAAS,YAAce,EAAeL,CAAI,EAC1CT,EAAU,YAAcc,EAAeJ,CAAK,EAC5CT,EAAY,YAAca,EAAeH,CAAO,EAChDT,EAAY,YAAcY,EAAeF,CAAO,EAEhDf,EAAS,SAAW,EAChC,MACY,cAAcU,CAAU,CAE/B,EAAE,GAAI,CACX,CAEA,SAASM,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}